{"name": "Possible Applocker Bypass", "description": "Detects execution of executables that can be used to bypass Applocker whitelisting", "created": "2019-01-16T00:00:00.000Z", "valid_from": "2019-01-16T00:00:00Z", "indicator_types": ["malicious-activity"], "pattern_type": "sigma", "pattern": "title: Possible Applocker Bypass\nid: 82a19e3a-2bfe-4a91-8c0d-5d4c98fbb719\ndescription: Detects execution of executables that can be used to bypass Applocker whitelisting\nstatus: experimental\nreferences:\n    - https://github.com/subTee/ApplicationWhitelistBypassTechniques/blob/master/TheList.txt\n    - https://room362.com/post/2014/2014-01-16-application-whitelist-bypass-using-ieexec-dot-exe/\nauthor: juju4\ndate: 2019/01/16\ntags:\n    - attack.defense_evasion\n    - attack.t1118\n    - attack.t1121\n    - attack.t1127\n    - attack.t1170\nlogsource:\n    category: process_creation\n    product: windows\ndetection:\n    selection:\n        CommandLine|contains:\n            - '\\msdt.exe'\n            - '\\installutil.exe'\n            - '\\regsvcs.exe'\n            - '\\regasm.exe'\n            # - '\\regsvr32.exe'  # too many FPs, very noisy\n            - '\\msbuild.exe'\n            - '\\ieexec.exe'\n            #- '\\mshta.exe'\n            #- '\\csc.exe'\n    condition: selection\nfalsepositives:\n    - False positives depend on scripts and administrative tools used in the monitored environment\n    - Using installutil to add features for .NET applications (primarly would occur in developer environments)\nlevel: low\n", "object_marking_refs": ["marking-definition--0a872d70-1d05-45dd-a25f-031af547a102"], "created_by_ref": "identity--082ca4f0-d825-45b6-aa42-ab9afd1e5503", "type": "indicator", "spec_version": "2.1", "id": "indicator--6d58f963-624f-4241-8a0b-6ea97399bb36", "modified": "2020-04-02T10:14:41.301Z"}